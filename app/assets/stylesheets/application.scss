/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 
 */



@import "bootstrap";





body {
       position: center;

}
    
    


html { 
  background: url(http://data.whicdn.com/images/86597965/large.jpg) 
  no-repeat center center fixed; 
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

#container {
    background-image:url(http://data.whicdn.com/images/86597965/large.jpg);
    background-position:cover;
    width:0px;
    height:0px;
}

#kids {
    text-shadow: 10px;
    color: teal;
    position: center;
    position: absolute;
    top: 100px;
    right: 550px;
    display: flex;
    flex-direction: row;
    

}

#racer {
       color: red;
       font-family: times;
       position: center;
       
       left: 100px;
       right: 100px;
       display: flex;

}

#play {
     position: center;
     color: green;
     display: flex;
     float: right;
     font-family: times;
     margin-left: 675px ;
     margin-top: -475px;
}    

#fun {
      display: flex;
      color: orange;
      font-family: times;
      float: right;
      margin-top:- 475px;
      margin-right: 500px;
    

}    



#bg {
  position: center; 
  top: 300px; 
  left: 200px;
  margin-left: 200px;
  margin-top: 200px;
	
  /* Preserve aspet ratio */
  min-width:  60%;
  min-height: 60%;
  
} 

 .logo.resize {
  left: 10px;
  
 
 }


.top {
  
  color: #FF3368;
  font-family: times;
  float: center;
  
}

.table {
     display:flex;
     float:column;
     flex-wrap: wrap;
     position:center; 
     width:800px;
}

@font-face {
    font-family: 'WebSymbolsRegular';
    src: url('websymbols/websymbols-regular-webfont.eot');
    src: url('websymbols/websymbols-regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('websymbols/websymbols-regular-webfont.woff') format('woff'),
         url('websymbols/websymbols-regular-webfont.ttf') format('truetype'),
         url('websymbols/websymbols-regular-webfont.svg#WebSymbolsRegular') format('svg');
    font-weight: normal;
    font-style: normal;
}

.category {
position:relative;
display: inline-block;
float:right;
padding:50px;
top:400px;
}

.ca-menu{
    padding: 0;
    margin: 20px auto;
    width: 500px;
}

.ca-menu li{
    width: 200px;
    height: 200px;
    border: 10px solid #f6f6f6;
    overflow: hidden;
    position: relative;
    float:left;
    background: #fff;
    margin-right: 4px;
    box-shadow: 1px 1px 2px rgba(0,0,0,0.2);
    border-radius: 125px;
    transition: all 1000ms linear;
}

.ca-menu li:hover{
    background: yellow;
    border-color: blue;
    transform: rotate(720deg);
}


.ca-menu li:hover .ca-icon{
    color: #555;
    font-size: 60px;

}
.ca-menu li:hover .ca-main{
    display: none;
}
.ca-menu li:hover .ca-sub{
    opacity: 0.8;
}


.ca-menu1 {
    padding: 0;
    margin: 20px auto;
    width: 500px;
}

.ca-menu1 li{
    width: 200px;
    height: 200px;
    border: 10px solid #f6f6f6;
    overflow: hidden;
    position: relative;
    float:left;
    background: #fff;
    margin-right: 4px;
    box-shadow: 1px 1px 2px rgba(0,0,0,0.2);
    border-radius: 125px;
    transition: all 1000ms linear;
}

.ca-menu1 li:hover{
    background: yellow;
    border-color: red;
    transform: rotate(720deg);
}


.ca-menu1 li:hover .ca-icon{
    color: #555;
    font-size: 60px;

}
.ca-menu1 li:hover .ca-main{
    display: none;
}
.ca-menu1 li:hover .ca-sub{
    opacity: 0.8;
}


.ca-menu2 {
    padding: 0;
    margin: 20px auto;
    width: 500px;
}

.ca-menu2 li{
    width: 200px;
    height: 200px;
    border: 10px solid #f6f6f6;
    overflow: hidden;
    position: relative;
    float:left;
    background: #fff;
    margin-right: 4px;
    box-shadow: 1px 1px 2px rgba(0,0,0,0.2);
    border-radius: 125px;
    transition: all 1000ms linear;
}

.ca-menu2 li:hover{
    background: yellow;
    border-color: orange;
    transform: rotate(720deg);
}


.ca-menu2 li:hover .ca-icon{
    color: #555;
    font-size: 60px;

}
.ca-menu2 li:hover .ca-main{
    display: none;
}
.ca-menu2 li:hover .ca-sub{
    opacity: 0.8;
}

.animated {
  animation-duration: 3s;
  animation-fill-mode: both;
}

.animated.infinite {
  animation-iteration-count: infinite;
}

@keyframes pulse {
  from {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

.pulse {
  animation-name: pulse;
}

.top {
  
  color: FFD433;

}


.animated1 {
  animation-duration: 5s;
  animation-fill-mode: both
}



@keyframes slideInLeft {
  from {
    transform: translate3d(-100%, 0, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.slideInLeft {
  animation-name: slideInLeft;
}




.animated {
  animation-duration: 5s;
  animation-fill-mode: both

}

.animated.infinite {
  animation-iteration-count: infinite;
}

@keyframes hinge {
  0% {
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }

  20%, 60% {
    transform: rotate3d(0, 0, 1, 80deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }

  40%, 80% {
    transform: rotate3d(0, 0, 1, 60deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
    opacity: 1;
  }

  to {
    transform: translate3d(0, 700px, 0);
    opacity: 0;
  }
}

.hinge {
  animation-name: hinge;
} 



.animated {
  animation-duration: 5s;
  animation-fill-mode: both

}

.animated.infinite {
  animation-iteration-count: infinite;
}
@keyframes bounce {
  from, 20%, 53%, 80%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0,0,0);
  }

  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }

  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }

  90% {
    transform: translate3d(0,-4px,0);
  }
}

.bounce {
  animation-name: bounce;
  transform-origin: center bottom;
}














